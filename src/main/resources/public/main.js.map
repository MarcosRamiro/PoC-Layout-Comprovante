{"version":3,"sources":["./src/environments/environment.ts","./src/app/comprovante/comprovante.service.ts","./src/app/comprovante/comprovante.component.ts","./src/app/comprovante/comprovante.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComprovanteService {\n\n  url = 'http://localhost:8080/comprovante/detalhe'; // api rest fake\n\n  constructor(private httpClient: HttpClient) {\n\n   }\n\n   postCarById(corpo: any): Observable<any> {\n    return this.httpClient.post<any>(this.url, JSON.stringify(corpo),this.httpOptions )\n     \n  }\n\n    \n\n       // Headers\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n    // Manipulação de erros\n    handleError(error: HttpErrorResponse) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        // Erro ocorreu no lado do client\n        errorMessage = error.error.message;\n      } else {\n        // Erro ocorreu no lado do servidor\n        errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    };\n}\nfunction retry(arg0: number): import(\"rxjs\").OperatorFunction<any, unknown> {\n  throw new Error('Function not implemented.');\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ComprovanteService } from './comprovante.service';\n\n@Component({\n  selector: 'app-comprovante',\n  templateUrl: './comprovante.component.html',\n  styleUrls: ['./comprovante.component.css']\n})\nexport class ComprovanteComponent implements OnInit {\n\n  mensagemAmigavel: string\n  textoDigitado: string = ''\n\n  name: FormControl = new FormControl('');\n  someObject : any\n\n\n  constructor(private comprovanteService: ComprovanteService) {\n    this.mensagemAmigavel = \"Insira abaixo os dados do comprovante\"\n    this.name = new FormControl('');\n   }\n\n  ngOnInit(): void {\n  }\n\n  clique(){\n\n  }\n\n  salvarValor(valor: any){\n    this.comprovanteService.postCarById(JSON.parse( valor)).subscribe(\n      (retorno) => {\n        this.someObject=retorno;\n      }\n    )\n  }\n\n\n\n}\n","<section>\n\n<h3>{{mensagemAmigavel}}</h3>\n\n<label>\n    Comprovante:\n    <input type=\"text\"\n        (keyup.enter)=\"salvarValor(campoInput.value)\"\n        (blur)=\"salvarValor(campoInput.value)\"\n        #campoInput\n    />\n</label>\n\n<button (click)=\"clique()\">Processar</button>\n\n{{textoDigitado}}\n\n  <ngx-json-viewer [json]=\"someObject\"></ngx-json-viewer>\n\n\n</section>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-app';\r\n}\r\n","<app-comprovante></app-comprovante>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ComprovanteComponent } from './comprovante/comprovante.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ComprovanteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    NgxJsonViewerModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}